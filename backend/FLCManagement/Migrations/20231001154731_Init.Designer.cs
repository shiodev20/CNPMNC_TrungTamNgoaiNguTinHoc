// <auto-generated />
using System;
using FLCManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FLCManagement.Migrations
{
    [DbContext(typeof(FLCMDBContext))]
    [Migration("20231001154731_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FLCManagement.Models.Branch", b =>
                {
                    b.Property<int>("branchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("branchID"));

                    b.Property<string>("branchAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("branchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("branchID");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("FLCManagement.Models.Certificate", b =>
                {
                    b.Property<int>("certificateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("certificateID"));

                    b.Property<string>("certificateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("certificateID");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("FLCManagement.Models.Class", b =>
                {
                    b.Property<int>("classID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("classID"));

                    b.Property<int>("branchID")
                        .HasColumnType("int");

                    b.Property<string>("classEndD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("className")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("classSize")
                        .HasColumnType("int");

                    b.Property<string>("classStartD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("classStatus")
                        .HasColumnType("bit");

                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.HasKey("classID");

                    b.HasIndex("branchID");

                    b.HasIndex("courseID");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("FLCManagement.Models.ClassDetail", b =>
                {
                    b.Property<int>("classdID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("classdID"));

                    b.Property<int>("classID")
                        .HasColumnType("int");

                    b.Property<int>("customerID")
                        .HasColumnType("int");

                    b.HasKey("classdID");

                    b.HasIndex("classID");

                    b.HasIndex("customerID");

                    b.ToTable("ClassDetails");
                });

            modelBuilder.Entity("FLCManagement.Models.Course", b =>
                {
                    b.Property<int>("courseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("courseID"));

                    b.Property<int>("certificateID")
                        .HasColumnType("int");

                    b.Property<string>("courseDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("courseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("coursePrice")
                        .HasColumnType("int");

                    b.Property<int>("languageID")
                        .HasColumnType("int");

                    b.HasKey("courseID");

                    b.HasIndex("certificateID");

                    b.HasIndex("languageID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("FLCManagement.Models.Customer", b =>
                {
                    b.Property<int>("customerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customerID"));

                    b.Property<string>("customerDob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("customerPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("customerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FLCManagement.Models.CustomerExamShift", b =>
                {
                    b.Property<int>("customeresID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("customeresID"));

                    b.Property<int>("ExamShiftexamstID")
                        .HasColumnType("int");

                    b.Property<int>("customerID")
                        .HasColumnType("int");

                    b.Property<float>("customeresScore")
                        .HasColumnType("real");

                    b.HasKey("customeresID");

                    b.HasIndex("ExamShiftexamstID");

                    b.HasIndex("customerID");

                    b.ToTable("CustomerExamShifts");
                });

            modelBuilder.Entity("FLCManagement.Models.Employee", b =>
                {
                    b.Property<int>("employeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("employeeID"));

                    b.Property<string>("employeeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeFName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeeLName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeePassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("employeePhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roleID")
                        .HasColumnType("int");

                    b.HasKey("employeeID");

                    b.HasIndex("roleID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("FLCManagement.Models.Exam", b =>
                {
                    b.Property<int>("examID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("examID"));

                    b.Property<int>("certificateID")
                        .HasColumnType("int");

                    b.Property<string>("examDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("examName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("examPrice")
                        .HasColumnType("int");

                    b.Property<int>("languageID")
                        .HasColumnType("int");

                    b.HasKey("examID");

                    b.HasIndex("certificateID");

                    b.HasIndex("languageID");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamExamType", b =>
                {
                    b.Property<int>("examExamTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("examExamTypeID"));

                    b.Property<int>("ExamTypeexamtID")
                        .HasColumnType("int");

                    b.Property<int>("examID")
                        .HasColumnType("int");

                    b.HasKey("examExamTypeID");

                    b.HasIndex("ExamTypeexamtID");

                    b.HasIndex("examID");

                    b.ToTable("ExamExamTypes");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamSession", b =>
                {
                    b.Property<int>("examsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("examsID"));

                    b.Property<int>("examID")
                        .HasColumnType("int");

                    b.Property<string>("examsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("examsStatus")
                        .HasColumnType("bit");

                    b.HasKey("examsID");

                    b.HasIndex("examID");

                    b.ToTable("ExamSessions");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamSessionResult", b =>
                {
                    b.Property<int>("examsrID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("examsrID"));

                    b.Property<int>("ExamSessionexamsID")
                        .HasColumnType("int");

                    b.Property<int>("customerID")
                        .HasColumnType("int");

                    b.Property<bool>("examsrResult")
                        .HasColumnType("bit");

                    b.HasKey("examsrID");

                    b.HasIndex("ExamSessionexamsID");

                    b.HasIndex("customerID");

                    b.ToTable("ExamSessionResults");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamShift", b =>
                {
                    b.Property<int>("examstID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("examstID"));

                    b.Property<int>("ExamSessionexamsID")
                        .HasColumnType("int");

                    b.Property<int>("ExamTypeexamtID")
                        .HasColumnType("int");

                    b.Property<int>("branchID")
                        .HasColumnType("int");

                    b.Property<string>("examstEndH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("examstSize")
                        .HasColumnType("int");

                    b.Property<string>("examstStartH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exemstDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("examstID");

                    b.HasIndex("ExamSessionexamsID");

                    b.HasIndex("ExamTypeexamtID");

                    b.HasIndex("branchID");

                    b.ToTable("ExamShifts");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamType", b =>
                {
                    b.Property<int>("examtID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("examtID"));

                    b.Property<string>("examtName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("examtID");

                    b.ToTable("ExamTypes");
                });

            modelBuilder.Entity("FLCManagement.Models.Language", b =>
                {
                    b.Property<int>("languageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("languageID"));

                    b.Property<string>("languageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("languageID");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("FLCManagement.Models.Lesson", b =>
                {
                    b.Property<int>("lessonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("lessonID"));

                    b.Property<int>("classID")
                        .HasColumnType("int");

                    b.Property<string>("lessonEndD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonEndH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonShift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonStartD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lessonStartH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("lessonID");

                    b.HasIndex("classID");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("FLCManagement.Models.Order", b =>
                {
                    b.Property<int>("orderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderID"));

                    b.Property<int>("courseID")
                        .HasColumnType("int");

                    b.Property<int>("customerID")
                        .HasColumnType("int");

                    b.Property<int?>("customerID1")
                        .HasColumnType("int");

                    b.Property<int>("examID")
                        .HasColumnType("int");

                    b.Property<int?>("examID1")
                        .HasColumnType("int");

                    b.Property<string>("orderCreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orderDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("orderTotal")
                        .HasColumnType("int");

                    b.HasKey("orderID");

                    b.HasIndex("courseID");

                    b.HasIndex("customerID");

                    b.HasIndex("customerID1");

                    b.HasIndex("examID");

                    b.HasIndex("examID1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FLCManagement.Models.Role", b =>
                {
                    b.Property<int>("roleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleID"));

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FLCManagement.Models.Class", b =>
                {
                    b.HasOne("FLCManagement.Models.Branch", "Branch")
                        .WithMany("Classes")
                        .HasForeignKey("branchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Course", "Course")
                        .WithMany("Classes")
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("FLCManagement.Models.ClassDetail", b =>
                {
                    b.HasOne("FLCManagement.Models.Class", "Class")
                        .WithMany("ClassDetails")
                        .HasForeignKey("classID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Customer", "Customer")
                        .WithMany("ClassDetails")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FLCManagement.Models.Course", b =>
                {
                    b.HasOne("FLCManagement.Models.Certificate", "Certificate")
                        .WithMany("Courses")
                        .HasForeignKey("certificateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Language", "Language")
                        .WithMany("Courses")
                        .HasForeignKey("languageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("FLCManagement.Models.CustomerExamShift", b =>
                {
                    b.HasOne("FLCManagement.Models.ExamShift", "ExamShift")
                        .WithMany("CustomerExamShifts")
                        .HasForeignKey("ExamShiftexamstID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Customer", "Customer")
                        .WithMany("CustomerExamShifts")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("ExamShift");
                });

            modelBuilder.Entity("FLCManagement.Models.Employee", b =>
                {
                    b.HasOne("FLCManagement.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("roleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FLCManagement.Models.Exam", b =>
                {
                    b.HasOne("FLCManagement.Models.Certificate", "Certificate")
                        .WithMany("Exams")
                        .HasForeignKey("certificateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Language", "Language")
                        .WithMany("Exams")
                        .HasForeignKey("languageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamExamType", b =>
                {
                    b.HasOne("FLCManagement.Models.ExamType", "ExamType")
                        .WithMany("ExamExamTypes")
                        .HasForeignKey("ExamTypeexamtID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Exam", "Exam")
                        .WithMany("ExamExamTypes")
                        .HasForeignKey("examID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("ExamType");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamSession", b =>
                {
                    b.HasOne("FLCManagement.Models.Exam", "Exam")
                        .WithMany("ExamSessions")
                        .HasForeignKey("examID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamSessionResult", b =>
                {
                    b.HasOne("FLCManagement.Models.ExamSession", "ExamSession")
                        .WithMany("ExamSessionResults")
                        .HasForeignKey("ExamSessionexamsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Customer", "Customer")
                        .WithMany("ExamSessionResults")
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("ExamSession");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamShift", b =>
                {
                    b.HasOne("FLCManagement.Models.ExamSession", "ExamSession")
                        .WithMany("ExamShifts")
                        .HasForeignKey("ExamSessionexamsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.ExamType", "ExamType")
                        .WithMany("ExamShifts")
                        .HasForeignKey("ExamTypeexamtID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Branch", "Branch")
                        .WithMany("ExamShifts")
                        .HasForeignKey("branchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("ExamSession");

                    b.Navigation("ExamType");
                });

            modelBuilder.Entity("FLCManagement.Models.Lesson", b =>
                {
                    b.HasOne("FLCManagement.Models.Class", "Class")
                        .WithMany("Lessons")
                        .HasForeignKey("classID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("FLCManagement.Models.Order", b =>
                {
                    b.HasOne("FLCManagement.Models.Course", "Course")
                        .WithMany("Orders")
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("customerID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("customerID1");

                    b.HasOne("FLCManagement.Models.Exam", "Exam")
                        .WithMany()
                        .HasForeignKey("examID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FLCManagement.Models.Exam", null)
                        .WithMany("Orders")
                        .HasForeignKey("examID1");

                    b.Navigation("Course");

                    b.Navigation("Customer");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("FLCManagement.Models.Branch", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("ExamShifts");
                });

            modelBuilder.Entity("FLCManagement.Models.Certificate", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("FLCManagement.Models.Class", b =>
                {
                    b.Navigation("ClassDetails");

                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("FLCManagement.Models.Course", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FLCManagement.Models.Customer", b =>
                {
                    b.Navigation("ClassDetails");

                    b.Navigation("CustomerExamShifts");

                    b.Navigation("ExamSessionResults");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FLCManagement.Models.Exam", b =>
                {
                    b.Navigation("ExamExamTypes");

                    b.Navigation("ExamSessions");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamSession", b =>
                {
                    b.Navigation("ExamSessionResults");

                    b.Navigation("ExamShifts");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamShift", b =>
                {
                    b.Navigation("CustomerExamShifts");
                });

            modelBuilder.Entity("FLCManagement.Models.ExamType", b =>
                {
                    b.Navigation("ExamExamTypes");

                    b.Navigation("ExamShifts");
                });

            modelBuilder.Entity("FLCManagement.Models.Language", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Exams");
                });

            modelBuilder.Entity("FLCManagement.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
